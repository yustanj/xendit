/**
 * API-XenditLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  GenerateReportRequest,
  generateReportRequestSchema,
} from '../models/generateReportRequest';
import { string } from '../schema';
import { BaseController } from './baseController';

export class ReportsBetaController extends BaseController {
  /**
   * @param id
   * @return Response from the API call
   */
  async getReport(
    id: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('GET');
    req.baseUrl('Server 1');
    const mapped = req.prepareArgs({ id: [id, string()] });
    req.appendTemplatePath`/reports/${mapped.id}`;
    return req.call(requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async generateReport(
    body: GenerateReportRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('POST', '/reports');
    req.baseUrl('Server 1');
    const mapped = req.prepareArgs({
      body: [body, generateReportRequestSchema],
    });
    req.json(mapped.body);
    return req.call(requestOptions);
  }
}
