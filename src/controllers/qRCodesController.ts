/**
 * API-XenditLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  CreateQRCodeRequest,
  createQRCodeRequestSchema,
} from '../models/createQRCodeRequest';
import { BaseController } from './baseController';

export class QRCodesController extends BaseController {
  /**
   * @param body
   * @return Response from the API call
   */
  async createQRCode(
    body: CreateQRCodeRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('POST', '/qr_codes');
    req.baseUrl('Server 1');
    const mapped = req.prepareArgs({ body: [body, createQRCodeRequestSchema] });
    req.json(mapped.body);
    return req.call(requestOptions);
  }

  /**
   * @return Response from the API call
   */
  async getQRCodeStatus(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('GET', '/qr_codes/testing_id_1586839321');
    req.baseUrl('Server 1');
    return req.call(requestOptions);
  }

  /**
   * @return Response from the API call
   */
  async simulatePaymentsDevMode(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest(
      'POST',
      '/qr_codes/testing_id_1586839321/payments/simulate'
    );
    req.baseUrl('Server 1');
    return req.call(requestOptions);
  }
}
