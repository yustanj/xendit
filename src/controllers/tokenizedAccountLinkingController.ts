/**
 * API-XenditLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  TokenizedGetAccountBalance,
  tokenizedGetAccountBalanceSchema,
} from '../models/tokenizedGetAccountBalance';
import { array, string } from '../schema';
import { BaseController } from './baseController';

export class TokenizedAccountLinkingController extends BaseController {
  /**
   * @param linkedAccountTokenId
   * @param idempotencyKey
   * @return Response from the API call
   */
  async tokenizedGetAccountBalance(
    linkedAccountTokenId: string,
    idempotencyKey: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<TokenizedGetAccountBalance[]>> {
    const req = this.createRequest('GET');
    req.baseUrl('Server 1');
    const mapped = req.prepareArgs({
      linkedAccountTokenId: [linkedAccountTokenId, string()],
      idempotencyKey: [idempotencyKey, string()],
    });
    req.header('Idempotency-key', mapped.idempotencyKey);
    req.appendTemplatePath`/linked_account_tokens/${mapped.linkedAccountTokenId}/accounts`;
    return req.callAsJson(
      array(tokenizedGetAccountBalanceSchema),
      requestOptions
    );
  }
}
