/**
 * API-XenditLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  GRABPAYTokenizedCreateCustomer,
  gRABPAYTokenizedCreateCustomerSchema,
} from '../models/gRABPAYTokenizedCreateCustomer';
import {
  GrabpayTokenizedCreateCustomerRequest,
  grabpayTokenizedCreateCustomerRequestSchema,
} from '../models/grabpayTokenizedCreateCustomerRequest';
import {
  OVOTokenizedCreateCustomer,
  oVOTokenizedCreateCustomerSchema,
} from '../models/oVOTokenizedCreateCustomer';
import {
  OVOTokenizedCreateCustomerRequest,
  oVOTokenizedCreateCustomerRequestSchema,
} from '../models/oVOTokenizedCreateCustomerRequest';
import {
  PAYMAYACreateCustomer,
  pAYMAYACreateCustomerSchema,
} from '../models/pAYMAYACreateCustomer';
import {
  PaymayaTokenizedCreateCustomerRequest,
  paymayaTokenizedCreateCustomerRequestSchema,
} from '../models/paymayaTokenizedCreateCustomerRequest';
import {
  ShopeepayCreateCustomer,
  shopeepayCreateCustomerSchema,
} from '../models/shopeepayCreateCustomer';
import {
  ShopeepayTokenizedCreateCustomerCopyRequest,
  shopeepayTokenizedCreateCustomerCopyRequestSchema,
} from '../models/shopeepayTokenizedCreateCustomerCopyRequest';
import { BaseController } from './baseController';

export class CreateCustomerStep1Controller extends BaseController {
  /**
   * @param body
   * @return Response from the API call
   */
  async oVOTokenizedCreateCustomer(
    body: OVOTokenizedCreateCustomerRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<OVOTokenizedCreateCustomer>> {
    const req = this.createRequest('POST', '/customers');
    req.baseUrl('Server 1');
    const mapped = req.prepareArgs({
      body: [body, oVOTokenizedCreateCustomerRequestSchema],
    });
    req.json(mapped.body);
    return req.callAsJson(oVOTokenizedCreateCustomerSchema, requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async grabpayTokenizedCreateCustomer(
    body: GrabpayTokenizedCreateCustomerRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<GRABPAYTokenizedCreateCustomer>> {
    const req = this.createRequest('POST', '/customers');
    req.baseUrl('Server 1');
    const mapped = req.prepareArgs({
      body: [body, grabpayTokenizedCreateCustomerRequestSchema],
    });
    req.json(mapped.body);
    return req.callAsJson(gRABPAYTokenizedCreateCustomerSchema, requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async paymayaTokenizedCreateCustomer(
    body: PaymayaTokenizedCreateCustomerRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<PAYMAYACreateCustomer>> {
    const req = this.createRequest('POST', '/customers');
    req.baseUrl('Server 1');
    const mapped = req.prepareArgs({
      body: [body, paymayaTokenizedCreateCustomerRequestSchema],
    });
    req.json(mapped.body);
    return req.callAsJson(pAYMAYACreateCustomerSchema, requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async shopeepayTokenizedCreateCustomerCopy(
    body: ShopeepayTokenizedCreateCustomerCopyRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ShopeepayCreateCustomer>> {
    const req = this.createRequest('POST', '/customers');
    req.baseUrl('Server 1');
    const mapped = req.prepareArgs({
      body: [body, shopeepayTokenizedCreateCustomerCopyRequestSchema],
    });
    req.json(mapped.body);
    return req.callAsJson(shopeepayCreateCustomerSchema, requestOptions);
  }
}
